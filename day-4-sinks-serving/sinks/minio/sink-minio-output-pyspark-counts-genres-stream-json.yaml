apiVersion: "kafka.strimzi.io/v1beta2"
kind: "KafkaConnector"
metadata:
  # connector name
  name: "sink-minio-output-pyspark-counts-genres-stream-json-c1cf1786"
  labels:
    # kafka connect [cluster] name
    strimzi.io/cluster: edh
spec:
  class: io.confluent.connect.s3.S3SinkConnector
  tasksMax: 1
  config:
    key.converter: "org.apache.kafka.connect.storage.StringConverter"
    value.converter: "org.apache.kafka.connect.json.JsonConverter"
    key.converter.schemas.enable: "false"
    value.converter.schemas.enable: "false"
    topics: "output-pyspark-counts-genres-stream-json"
    s3.bucket.name: "output-events"
    s3.part.size: 5242880
    flush.size: 500
    rotate.schedule.interval.ms: 18000
    store.url: "http://minio.deepstorage.svc.Cluster.local:9000/"
    aws.access.key.id: "console"
    aws.secret.access.key: "console123"
    storage.class: "io.confluent.connect.s3.storage.S3Storage"
    format.class: "io.confluent.connect.s3.format.json.JsonFormat"
    schema.generator.class: "io.confluent.connect.storage.hive.schema.DefaultSchemaGenerator"
    partitioner.class: "io.confluent.connect.storage.partitioner.TimeBasedPartitioner"
    path.format: "YYYY/MM/dd/HH"
    locale: "pt_BR"
    timezone: "America/Sao_Paulo"
    partition.duration.ms: 18000
    timestamp.extractor: "Record"
    s3.part.retries: 10
    s3.retry.backoff.ms: 900
