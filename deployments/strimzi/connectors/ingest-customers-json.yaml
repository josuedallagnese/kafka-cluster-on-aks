apiVersion: "kafka.strimzi.io/v1beta2"
kind: "KafkaConnector"
metadata:
  # connector name
  name: "customers"
  labels:
    # kafka connect [cluster] name
    strimzi.io/cluster: edh
spec:
  class: io.confluent.connect.jdbc.JdbcSourceConnector
  tasksMax: 1
  config:
    key.converter: "org.apache.kafka.connect.json.JsonConverter"
    value.converter: "org.apache.kafka.connect.json.JsonConverter"
    value.converter.schemas.enable: "false"
    connection.url: "jdbc:postgresql://XXXX.postgres.database.azure.com:5432/Sales"
    connection.user: "${file:/opt/kafka/external-configuration/connector-config-postgresql/postgresql-credentials.properties:postgres_username}"
    connection.password: "${file:/opt/kafka/external-configuration/connector-config-postgresql/postgresql-credentials.properties:postgres_password}"
    connection.attempts: "2"
    topic.creation.enable: "false"
    topic.creation.default.replication.factor: 1
    topic.creation.default.partitions: 1
    topic.creation.default.cleanup.policy: "compact"
    topic.creation.default.compression.type: "lz4"
    query: "select * from \"Customers\" f"
    mode: "incrementing"
    topic.prefix: "customers"
    incrementing.column.name: "Id"
    validate.non.null: "false"
    transforms: "createKey,extractInt"
    transforms.createKey.type: "org.apache.kafka.connect.transforms.ValueToKey"
    transforms.createKey.fields: "Id"
    transforms.extractInt.type: "org.apache.kafka.connect.transforms.ExtractField$Key"
    transforms.extractInt.field: "Id"
